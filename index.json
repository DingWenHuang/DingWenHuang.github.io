[{"categories":["About"],"contents":" 自我介紹： 我是黃鼎文，畢業於國立交通大學生醫工程研究所。透過線上學習平台，自主學習了程式語言並成功開發了兩個小型專案。一個是 MERN 架構的前後端分離專案，一個是 Spring Boot 開發的後端電商網站。我正積極地朝著成為一名優秀軟體工程師的目標前進。\n在這段約五個月的自學經驗中，我能夠在遭遇困難時，自主尋求解決方案，並透過有效率的問題提出與老師進行深入的討論，這讓我對自己的學習能力充滿信心，也相信這樣的能力在未來的工作上會有所幫助。\n在年紀邁入 30 歲的階段，我抱著挑戰的勇氣，決心嘗試全新的道路。我相信在保有動力的時刻，正是挑戰自我的最佳時機。過去一直以來，我對軟體開發領域抱持濃厚的興趣，現在正是我勇敢追尋這份興趣的時候。 學歷： 國立交通大學生醫工程研究所 - 碩士學位\n高雄醫學大學生物科技學系 - 學士學位（獲得智育與四育獎章畢業） 語言能力： 英文：聽（中等）、說（中等）、讀（中等）、寫（中等）\n日文：聽（中等）、說（中等）、讀（中等）、寫（中等） 相關技能： 程式語言：HTML、CSS、JavaScript、Java\n版本控制：具備 Git 的使用經驗\n集成開發環境：Visual Studio Code、IntelliJ IDEA\n前端框架：具有 React 的開發經驗。\n後端框架：Express.js 和 Spring Boot 的開發經驗\n資料庫：關聯式資料庫（MySQL）、非關聯式資料庫（MongoDB）\n其他內容：了解 Linux 系統與 Docker 的基本操作。\n詳細的應用內容請參考作品集說明 作品集簡介： 1.MERN 專案-學生與教職員課程系統 連結：https://mern-practice-client.onrender.com/\r(因使用免費的 render.com 進行部屬，首次進入需等待約一分鐘以啟動服務)\nGitHub 客戶端：https://github.com/DingWenHuang/mern-client-deploy\rGitHub 伺服器：https://github.com/DingWenHuang/mern-server-deploy\r專案簡介： 這個專案是一個學生與教職員課程系統，使用者可以註冊帳號並選擇身分。根據不同的身分，使用者可以執行不同的操作。\n測試用帳號 - 講師：\n帳號：teacher1@test.com，密碼：teacher1\n帳號：teacher2@test.com，密碼：teacher2\n測試用帳號 - 學生：\n帳號：student1@test.com，密碼：student1\n帳號：student2@test.com，密碼：student2\n使用技術： 前端：React 後端：Express.js 資料庫：MongoDB 驗證方式：JWT 實作內容： 提供使用者註冊、登入、登出功能\n在個人頁面中，使用者可以更改名稱、信箱和密碼\n講師可以建立新課程，同時可以在課程頁面中進行修改和刪除操作\n學生可以搜尋課程並進行註冊，同時可以在課程頁面查看已註冊課程，並進行退選操作\n詳細內容與流程圖請參考：https://dingwenhuang.github.io/blog/portfolio_1/\r2.Spring Boot 專案 - 電商平台後端 連結：https://springboot-mall.onrender.com/\r(因使用免費的 render.com 進行部屬，首次進入需等待約一分鐘以啟動服務)\nGitHub：https://github.com/DingWenHuang/springboot-mall-deploy\r專案簡介： 這個專案是一個使用 Spring Boot 架構的電商平台後端。主要功能涵蓋商品管理、使用者管理和訂單管理。同時，進行了單元測試以確保 API 的可靠性。\n使用技術： 後端：Spring Boot 資料庫：MySQL 實作內容： 商品管理的 CRUD 操作\n使用者的註冊和登入功能\n新增訂單功能和查詢訂單列表功能\n為上述功能添加單元測試\n詳細內容與流程圖請參考：https://dingwenhuang.github.io/blog/portfolio_2/\r","permalink":"https://DingWenHuang.github.io/blog/resume/","tags":null,"title":"個人簡歷與作品集簡介"},{"categories":["Portfolio"],"contents":" 2.Spring boot 專案-電商平台後端 連結：https://springboot-mall.onrender.com/\r(因使用免費的 render.com 進行部屬，首次進入需等待約一分鐘以啟動服務)\nGitHub：https://github.com/DingWenHuang/springboot-mall-deploy\r專案簡介： 這個專案是一個使用 Spring Boot 架構的電商平台後端。主要功能涵蓋商品管理、使用者管理和訂單管理。同時，進行了單元測試以確保 API 的可靠性。\n使用技術： 後端：Spring Boot 資料庫：MySQL 實作內容： 商品管理的 CRUD 操作\n使用者的註冊和登入功能\n新增訂單功能和查詢訂單列表功能\n為上述功能添加單元測試\n使用者功能 - 註冊\r使用者功能 - 登入\r訂單功能 - 新增訂單\r訂單功能 - 查詢訂單列表\r商品功能 - 新增商品\r商品功能 - 取得商品\r商品功能 - 修改商品\r商品功能 - 刪除商品\r商品功能 - 取得商品列表\r流程圖： 1. 使用者功能 - 註冊 註冊功能中，會先確認信箱是否已經被註冊過，接著會將密碼進行雜湊處理，然後在將資料儲存到資料庫內，並返回使用者的 ID，接著再透過該 ID 去查詢該使用者的資料回傳，並顯示 201 created 狀態碼\n2. 使用者功能 - 登入 登入功能中，會先去確認是否有該信箱的使用者註冊過，接著將密碼進行雜湊處理後與資料庫內的密碼做比較，如果正確就會回傳該使用者的資料\n3. 訂單功能 - 新增訂單 新增訂單功能中，會先確認是否有該使用者存在，接下來根據提交的購買商品列表去確認是否有該項商品存在，再來是檢查庫存量是否足夠提供購買，確認都沒問題後，就會去更新商品庫存，並且計算該訂單的總金額去創建訂單，同時也會建立訂單的詳細內容，將兩者都儲存到資料庫內\n接著將訂單 ID 回傳，並透過該 ID 查詢訂單，查詢時不僅會取得訂單的資料，同時會取得訂單的詳細內容，並將詳細內容附加到訂單上再回傳，最後創建成功後會回傳 201 created 狀態碼\n4. 訂單功能 - 查詢訂單列表 查詢訂單列表的功能中，會先將請求的參數封裝起來後，去執行查詢訂單與計算訂單總數的動作，得到在該查詢條件下取得的訂單內容與訂單數量\n查詢訂單時會先檢查使用者是否存在，然後再根據取得的訂單 ID 去查詢對應的詳細內容，並且附加到該筆訂單上，最後再跟前面取得的訂單數量一起封裝成分頁物件後回傳\n5. 商品功能 - 新增商品 新增商品的功能中，會先儲存該商品資料到資料庫內，並回傳該商品的 ID，再透過該 ID 查詢得到該商品的資料後回傳，並顯示 201 created 狀態碼\n6. 商品功能 - 取得商品 取得商品的功能中，直接以該商品 ID 進行查詢，將得到的商品資料回傳\n7. 商品功能 - 修改商品 修改商品的功能中，會先透過商品 ID 確認該商品是否存在，然後再進行更新商品的操作，更新後再透過商品 ID 查詢取得商品資料後回傳\n8. 商品功能 - 刪除商品 刪除商品的功能中，會根據商品 ID 進行刪除的操作，最後會回傳 204 no content 狀態碼\n9. 商品功能 - 取得商品列表 取得商品列表的功能中，會先將請求的參數封裝起來，去執行查詢商品與計算商品總數的動作，得到在該查詢條件下取得的商品內容與商品數量，並將結果封裝成分頁物件後回傳\n","permalink":"https://DingWenHuang.github.io/blog/portfolio_2/","tags":["Spring boot","Java","MySQL"],"title":"Spring Boot 專案-電商平台後端"},{"categories":["Portfolio"],"contents":" 連結：https://mern-practice-client.onrender.com/\r(由於部屬在免費的 render.com 上，首次進入需花費約一分鐘等待服務啟動)\ngithub client 端：https://github.com/DingWenHuang/mern-client-deploy\rgithub server 端：https://github.com/DingWenHuang/mern-server-deploy\r專案簡介： 這個專案是一個學生與教職員課程系統，使用者可以註冊帳號並選擇身分。根據不同的身分，使用者可以執行不同的操作。\n測試用帳號 - 講師：\n帳號：teacher1@test.com，密碼：teacher1\n帳號：teacher2@test.com，密碼：teacher2\n測試用帳號 - 學生：\n帳號：student1@test.com，密碼：student1\n帳號：student2@test.com，密碼：student2\n使用技術： 前端：React 後端：Express.js 資料庫：MongoDB 驗證方式：JWT 實作內容： 提供使用者註冊、登入、登出功能\n在個人頁面中，使用者可以更改名稱、信箱和密碼\n講師可以建立新課程，同時可以在課程頁面中進行修改和刪除操作\n學生可以搜尋課程並進行註冊，同時可以在課程頁面查看已註冊課程，並進行退選操作\n使用者功能 - 註冊\r使用者功能 - 登入\r使用者功能 - 登出\r使用者功能 - 更改使用者資料\r使用者功能 - 更改使用者密碼\r講師功能 - 新增課程\r講師功能 - 查詢開設課程\r講師功能 - 修改開設課程\r講師功能 - 刪除開設課程\r學生功能 - 搜尋課程\r學生功能 - 註冊課程\r學生功能 - 查詢已註冊課程\r學生功能 - 退選課程\r流程圖： 1. 使用者功能 - 註冊 註冊功能中，會先驗證使用者資料的格式是否符合規範，然後確認信箱是否已經被註冊過，接著將密碼進行雜湊處理後儲存到資料庫，並回傳儲存後的使用者資料，並導向到登入頁面\n2. 使用者功能 - 登入 登入功能中，會先驗證使用者資料的格式是否符合規範，然後確認是否有該信箱的使用者資料，接下來比對使用者密碼是否跟資料庫內的相同，確認匹配後就會簽署 JWT，並將使用者資料儲存在瀏覽器上，並導向到個人資料頁面\n3. 使用者功能 - 登出 登出功能中，會直接清除掉儲存在瀏覽器上的使用者資料，並導向到首頁\n4. 使用者功能 - 更改使用者資料 更改使用者資料功能中，會先驗證要更改的資料格式是否符合規範，接著確認是否有該使用者 ID 的資料存在，然後確認欲修改的信箱是否已經被其他使用者註冊使用，最後是確認密碼是否正確，都符合條件的話就會去更新使用者的資料並回傳，此時會先登出使用者，並以更新後資料內容重新登入，並導向到個人資料頁面\n5. 使用者功能 - 更改使用者密碼 更改使用者密碼功能中，會驗證要變更的新密碼是否符合規範，接著確認是否有該使用者 ID 的資料存在，然後比對舊密碼是否正確以確認身分，接著將欲修改的新密碼進行雜湊處理，然後去更新使用者的資料並回傳，更改密碼後會被強制登出並導向到登入頁面要求以新的密碼進行登入\n6. 講師功能 - 新增課程 新增課程功能中，會先驗證課程的資料格式是否符合規範，然後確認是否是講師身分，接著就會將課程資料儲存到資料庫內，並導向到課程頁面\n7. 講師功能 - 查詢開設課程 查詢開設課程功能中，會先確認是否是講師身分，接著根據講師的 ID 查詢該講師開設的所有課程，並將結果回傳，再由前端去將取得的課程做展示\n8. 講師功能 - 修改開設課程 修改開設課程功能中，會先確認欲修改的課程資料格式是否符合規範，然後確認是否是講師身分，再來根據課程 ID 查詢該課程的資料，並確認提出修改請求的講師是否為該課程的講師，都符合條件後就可以將更新後的資料儲存到資料庫內，並回傳更新後的資料內容，並導向到課程頁面\n9. 講師功能 - 刪除開設課程 刪除開設課程的功能中，會先確認是否是講師身分，再來根據課程 ID 查詢該課程的資料，並確認提出刪除請求的講師是否為該課程的講師，都符合條件後就可以執行刪除課程操作，並導向到課程頁面\n10. 學生功能 - 搜尋課程 搜尋課程功能中，會取得資料庫內的所有課程並回傳，再由前端去將取得的課程做展示\n11. 學生功能 - 註冊課程 註冊課程的功能中，會根據該課程 ID 查詢資料庫內的資料，然後確認該學生是否已經註冊過該課程，才去更新內部的屬性，將學生的 ID 加入學生名單內後進行儲存，並導向到課程頁面\n12. 學生功能 - 查詢已註冊課程 查詢已註冊課程功能中，會根據學生的 ID 去查詢課程並回傳，再由前端去將取得的課程做展示\n13. 學生功能 - 退選課程 退選課程功能中，會根據課程 ID 進行查詢，接著確認提出退選請求的學生是否為該課程的學生，符合條件就會去更新課程資料將該學生從學生名單移除，然後回傳更新後的課程資料，並重新載入課程頁面\n","permalink":"https://DingWenHuang.github.io/blog/portfolio_1/","tags":["React","Express","MongoDB","JWT","JavaScript"],"title":"MERN 專案-學生與教職員課程系統"}]